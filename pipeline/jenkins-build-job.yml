- job:
    name: checkbox.io
    project-type: pipeline
    dsl: |
      node {
          stage('Source') {
              git 'https://github.com/chrisparnin/checkbox.io.git'
          }
          stage('Build') {
              sh 'cd ./server-side/site; npm install; npm install pm2;'
          }
          stage('Test') {
              sh 'cd ./server-side/site; npx pm2 start server.js; npm test;'
          }
      }

- job:
    name: iTrust
    project-type: pipeline
    dsl: |
        pipeline {
            agent any
            stages {
                stage('Checkout') {
                    steps {
                        script {
                            // The below will clone your repo and will be checked out to master branch by default.
                            git credentialsId: 'iTrust-credential', url: 'https://github.ncsu.edu/engr-csc326-staff/iTrust2-v8'
                            // Checkout to a specific branch in your repo.
                            sh "git checkout main"
                            sh "cp /bakerx/pom.xml /var/lib/jenkins/jobs/iTrust/workspace/iTrust2/pom.xml"
                        }
                    }   
                }
                stage('Build') {
                    steps {
                        sh 'cd /var/lib/jenkins/jobs/iTrust/workspace/iTrust2/src/main/resources; cp application.yml.template application.yml'
                        sh 'sed -i "s/password:/password: root/" "/var/lib/jenkins/jobs/iTrust/workspace/iTrust2/src/main/resources/application.yml"'
                    }
                }
                stage('Test') {
                    steps {
                        sh 'cd /var/lib/jenkins/jobs/iTrust/workspace/iTrust2; mvn clean test integration-test jacoco:report checkstyle:checkstyle'
                    }
                }                
                stage('Analysis') {
                    steps {                        
                        recordIssues(tools: [checkStyle(pattern: '**/target/checkstyle-result.xml', reportEncoding: 'UTF-8')],, qualityGates: [[threshold: 1, type: 'TOTAL', unstable: true]])
                        jacoco(execPattern: '**/**.exec', classPattern: '**/classes', sourcePattern: '**/src', exclusionPattern: '**/*Test*.class', changeBuildStatus: true, minimumInstructionCoverage: '30', maximumInstructionCoverage: '60', minimumLineCoverage: '30', maximumLineCoverage: '60', minimumClassCoverage: '30', maximumClassCoverage: '75', minimumMethodCoverage: '30', maximumMethodCoverage: '60', minimumBranchCoverage: '30', maximumBranchCoverage: '40', minimumComplexityCoverage: '30', maximumComplexityCoverage: '50')                        
                    }
                }
            }
            post {
                always {
                    echo 'Build Job Completed!'
                    echo 'Cleaning up workspace...'
                    deleteDir() /* clean up our workspace */

                    echo 'Dropping databases'
                    sh 'mysql -u root -proot -e "DROP DATABASE IF EXISTS iTrust2_test;"'

                }    
            }
        }